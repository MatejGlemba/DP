services:
  serverApp:
    image: tomcat:9.0.48-jdk11-openjdk-slim
    restart: "always"
    ports:
      - "8080:8080"
    volumes:
      - ./tomcat/app:/usr/local/tomcat/webapps/
      - ./images:/usr/local/tomcat/webapps/ROOT/resources/dropmenote/files/images/
    depends_on:
      - serverDB
    networks:
      - ai-network
      - app-network

  serverDB:
    image: docker.io/postgres:10.3-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=testDB
      - POSTGRES_PASSWORD=test
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./serverDB/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-network

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    user: root
    #ports:
    #  - 2181:2181
    #volumes:
    #  - ./src/zookeeper:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - ai-network

  dmnkafka:
    image: docker.io/bitnami/kafka:3
  #  hostname: dh-kafka
    user: root
    ports:
      - 9094:9094
   # volumes:
   #   - ./src/kafka:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - AUTO_CREATE_TOPICS=true
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://dmnkafka:9092,OUTSIDE://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT,DEV:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    networks:
      - ai-network

  mongodb:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - ./src/mongodb:/data/db
    networks:
      - ai-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    user: "472:472"
    volumes:
      - ./src/grafana/config.ini:/etc/grafana/config.ini
      - ./src/grafana/provisioning:/etc/grafana/provisioning
      - ./src/grafana/dashboards:/var/lib/grafana/dashboards
      - ./src/grafana/plugins:/var/lib/grafana/plugins
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/roomsDashboard.json
    depends_on:
      - postgres
      - analyzer
    restart: always
  #  privileged: true
    networks:
      - ai-network
      - db-network

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: analyzerDB
   # volumes:
   #   - ./src/postgres/data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - db-network

  analyzer:
    image: dmn-analyzer
    restart: always
    volumes:
      - ./src/analyzer:/app
      - ./images:/app/images
    ports:
      - "5000:5000"  # Example port mapping for your application
    depends_on:
      - dmnkafka
      - postgres
      - mongodb
    privileged: true
    networks:
      - ai-network
      - db-network

networks:
  ai-network:
    name: ai-network
  app-network:
    name: app-network
  db-network:
    name: db-network
